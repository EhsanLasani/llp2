(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/node_modules/@carbon/react/es/tools/events.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Composes multiple event handler functions into a single event handler. The
 * composed handler calls each provided function sequentially with the event and
 * any additional arguments. If any handler calls `event.preventDefault()`,
 * further handlers are skipped.
 *
 * @param handlers - An array of event handler functions.
 * @returns A composite event handler.
 */ __turbopack_context__.s([
    "composeEventHandlers",
    ()=>composeEventHandlers
]);
const composeEventHandlers = (handlers)=>// eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
    (event, ...args)=>{
        for (const handler of handlers){
            if (event.defaultPrevented) {
                break;
            }
            if (typeof handler === 'function') {
                handler(event, ...args);
            }
        }
    };
;
}),
"[project]/node_modules/@carbon/react/es/tools/toggleClass.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Toggles a class on an element.
 *
 * @param element - The target element.
 * @param className - The class to toggle.
 * @param add - `true` to add the class, `false` to remove it.
 */ __turbopack_context__.s([
    "toggleClass",
    ()=>toggleClass
]);
const toggleClass = (element, className, add)=>{
    element.classList.toggle(className, add);
};
;
}),
"[project]/node_modules/@carbon/react/es/tools/wrapComponent.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "default",
    ()=>wrapComponent
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/prop-types/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/usePrefix.js [app-client] (ecmascript)");
;
;
;
;
/**
 * @param {{ name: string, type: string, className?: string | (prefix: string) => string }} props
 * @returns
 */ const wrapComponent = ({ name, className: getClassName, type })=>{
    /**
   *
   * @param {{ className?: string, [x: string]: any}} param0
   * @returns
   */ function Component({ className: baseClassName, ...other }) {
        const prefix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePrefix"])();
        const componentClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(typeof getClassName === 'function' ? getClassName(prefix) : getClassName, baseClassName);
        return /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(type, {
            ...other,
            // Prevent Weird quirk where `cx` will evaluate to an empty string, '',
            // and so we have empty `class` attributes in the resulting markup
            // eslint-disable-next-line no-extra-boolean-cast
            className: !!componentClass ? componentClass : undefined
        });
    }
    Component.displayName = name;
    Component.propTypes = {
        className: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].string
    };
    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
    return Component;
};
;
}),
"[project]/node_modules/@carbon/react/es/prop-types/requiredIfGivenPropIsTruthy.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * @param name The name of the prop that must exist to validate the current
 * prop.
 * @param propType The original prop type checker.
 * @returns The new prop type checker for the current prop that becomes required
 * if the prop corresponding to the provided prop name exists.
 */ __turbopack_context__.s([
    "requiredIfGivenPropIsTruthy",
    ()=>requiredIfGivenPropIsTruthy
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
const requiredIfGivenPropIsTruthy = (name, propType)=>{
    return (props, propName, componentName, ...rest)=>{
        if (("TURBOPACK compile-time value", "development") !== 'production' && props[name] === true && props[propName] === null) {
            return new Error(`You must provide a value for \`${propName}\` in \`${componentName}\` if \`${name}\` exists.`);
        }
        return propType(props, propName, componentName, ...rest);
    };
};
;
}),
"[project]/node_modules/@carbon/react/es/prop-types/deprecateComponent.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "default",
    ()=>deprecateComponent
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$warning$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/warning.js [app-client] (ecmascript)");
;
const didWarnAboutDeprecation = {};
function deprecateComponent(componentName, message) {
    if (!didWarnAboutDeprecation[componentName]) {
        didWarnAboutDeprecation[componentName] = true;
        ("TURBOPACK compile-time truthy", 1) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$warning$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warning"])(false, message) : "TURBOPACK unreachable";
    }
    return componentName;
}
;
}),
"[project]/node_modules/@carbon/react/es/internal/keyboard/navigation.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "getNextIndex",
    ()=>getNextIndex,
    "selectorFocusable",
    ()=>selectorFocusable,
    "selectorTabbable",
    ()=>selectorTabbable
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$keys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/keys.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$match$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/match.js [app-client] (ecmascript)");
;
;
/**
 * A "ring buffer" function that takes an array and, depending on an ArrowRight
 * or ArrowLeft key input, loops from last index to first or first index to last.
 *
 * @param key - the left or right arrow key (KeyboardEvent, number, or string)
 * @param index - the current index in the array
 * @param arrayLength - the total length of the array
 *
 * @example
 *  getNextIndex(keyCodes.RIGHT, 0, 4)
 */ const getNextIndex = (key, index, arrayLength)=>{
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$match$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["match"])(key, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$keys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArrowRight"])) {
        return (index + 1) % arrayLength;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$match$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["match"])(key, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$keys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArrowLeft"])) {
        return (index + arrayLength - 1) % arrayLength;
    }
    return;
};
/**
 * CSS selector that selects major nodes that are sequentially focusable.
 */ const selectorTabbable = `
  a[href], area[href], input:not([disabled]):not([tabindex='-1']),
  button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),
  textarea:not([disabled]):not([tabindex='-1']),
  iframe, object, embed, *[tabindex]:not([tabindex='-1']):not([disabled]), *[contenteditable=true]
`;
/**
 * CSS selector that selects major nodes that are click focusable.
 */ const selectorFocusable = `
  a[href], area[href], input:not([disabled]),
  button:not([disabled]),select:not([disabled]),
  textarea:not([disabled]),
  iframe, object, embed, *[tabindex]:not([disabled]), *[contenteditable=true]
`;
;
}),
"[project]/node_modules/@carbon/react/es/internal/wrapFocus.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "elementOrParentIsFloatingMenu",
    ()=>elementOrParentIsFloatingMenu,
    "wrapFocus",
    ()=>wrapFocus,
    "wrapFocusWithoutSentinels",
    ()=>wrapFocusWithoutSentinels
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tabbable$2f$dist$2f$index$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tabbable/dist/index.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/navigation.js [app-client] (ecmascript)");
;
;
/**
 * A flag `node.compareDocumentPosition(target)` returns that indicates
 * `target` is located earlier than `node` in the document or `target` contains `node`.
 */ const DOCUMENT_POSITION_BROAD_PRECEDING = typeof Node !== 'undefined' ? Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS : 0;
/**
 * A flag `node.compareDocumentPosition(target)` returns that indicates
 * `target` is located later than `node` in the document or `node` contains `target`.
 */ const DOCUMENT_POSITION_BROAD_FOLLOWING = typeof Node !== 'undefined' ? Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY : 0;
/**
 * Checks whether the given node or one of its ancestors matches any of the
 * specified floating menu selectors.
 *
 * @param {Node} node - A DOM node.
 * @param {string[]} selectorsFloatingMenus - Additional CSS selectors that
 * match floating menus.
 * @returns {boolean} Whether the node or one of its ancestors is in a floating
 * menu.
 */ const elementOrParentIsFloatingMenu = (node, selectorsFloatingMenus = [])=>{
    if (node instanceof Element && typeof node.closest === 'function') {
        const allSelectorsFloatingMenus = [
            '.cds--overflow-menu-options',
            '.cds--tooltip',
            '.flatpickr-calendar',
            ...selectorsFloatingMenus
        ];
        return allSelectorsFloatingMenus.some((selector)=>!!node.closest(selector));
    }
    return false;
};
/**
 * Ensures the focus is kept within the given container by implementing
 * "focus-wrap" behavior.
 */ const wrapFocus = ({ bodyNode, startTrapNode, endTrapNode, currentActiveNode, oldActiveNode, selectorsFloatingMenus })=>{
    if (bodyNode && currentActiveNode && oldActiveNode && !bodyNode.contains(currentActiveNode) && !elementOrParentIsFloatingMenu(currentActiveNode, selectorsFloatingMenus)) {
        const comparisonResult = oldActiveNode.compareDocumentPosition(currentActiveNode);
        if (currentActiveNode === startTrapNode || comparisonResult & DOCUMENT_POSITION_BROAD_PRECEDING) {
            const tabbableElement = Array.from(bodyNode.querySelectorAll(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["selectorTabbable"])).reverse().find(({ offsetParent })=>Boolean(offsetParent));
            if (tabbableElement) {
                tabbableElement.focus();
            } else if (bodyNode !== oldActiveNode) {
                bodyNode.focus();
            }
        } else if (currentActiveNode === endTrapNode || comparisonResult & DOCUMENT_POSITION_BROAD_FOLLOWING) {
            const tabbableElement = Array.from(bodyNode.querySelectorAll(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["selectorTabbable"])).find(({ offsetParent })=>Boolean(offsetParent));
            if (tabbableElement) {
                tabbableElement.focus();
            } else if (bodyNode !== oldActiveNode) {
                bodyNode.focus();
            }
        }
    }
};
/**
 * Ensures the focus is kept in the given container, implementing "focus-wrap"
 * behavior.
 *
 * Note: This must be called *before* focus moves using `onKeyDown` or similar.
 */ const wrapFocusWithoutSentinels = ({ containerNode, currentActiveNode, event })=>{
    if (!containerNode) return;
    if ([
        'blur',
        'focusout',
        'focusin',
        'focus'
    ].includes(event.type) && ("TURBOPACK compile-time value", "development") !== 'production') {
        throw new Error(`Error: wrapFocusWithoutSentinels(...) called in unsupported ${event.type} event.\n\nCall wrapFocusWithoutSentinels(...) from onKeyDown instead.`);
    }
    // Use `tabbable` to get the focusable elements in tab order.
    // `selectorTabbable` returns elements in DOM order which is why it's not
    // used.
    const tabbables = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tabbable$2f$dist$2f$index$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tabbable"])(containerNode);
    const firstTabbable = tabbables[0];
    const lastTabbable = tabbables[tabbables.length - 1];
    // The shift key indicates if focus is moving forwards or backwards.
    if (currentActiveNode === lastTabbable && !event.shiftKey) {
        // Cancel the current movement of focus because we're going to place it ourselves
        event.preventDefault();
        firstTabbable.focus();
    }
    if (currentActiveNode === firstTabbable && event.shiftKey) {
        // Cancel the current movement of focus because we're going to place it ourselves
        event.preventDefault();
        lastTabbable.focus();
    }
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/usePresence.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "usePresence",
    ()=>usePresence
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/usePrefix.js [app-client] (ecmascript)");
;
;
const usePresence = (ref, isOpen)=>{
    const prefix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePrefix"])();
    const [exitState, setExitState] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(isOpen ? 'idle' : 'finished');
    const isExiting = exitState === 'active';
    // element is exiting
    if (!isOpen && exitState === 'idle') {
        setExitState('active');
    }
    // element exit was interrupted
    if (isOpen && exitState !== 'idle') {
        setExitState('idle');
    }
    const handleAnimationEnd = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "usePresence.useCallback[handleAnimationEnd]": ()=>{
            setExitState('finished');
        }
    }["usePresence.useCallback[handleAnimationEnd]"], []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useLayoutEffect"])({
        "usePresence.useLayoutEffect": ()=>{
            if (!ref.current || !isExiting) return;
            // resolve for JSDOM
            if (!('getAnimations' in ref.current)) {
                handleAnimationEnd();
                return;
            }
            // cover all animations that start with the presence prefix
            const animations = ref.current.getAnimations({
                subtree: true
            }).filter({
                "usePresence.useLayoutEffect.animations": (animation)=>animation instanceof CSSAnimation && animation.animationName.startsWith(`${prefix}--presence`)
            }["usePresence.useLayoutEffect.animations"]);
            if (!animations.length) {
                handleAnimationEnd();
                return;
            }
            let cancelled = false;
            Promise.all(animations.map({
                "usePresence.useLayoutEffect": (animation)=>animation.finished
            }["usePresence.useLayoutEffect"])).finally({
                "usePresence.useLayoutEffect": ()=>{
                    if (cancelled) return;
                    handleAnimationEnd();
                }
            }["usePresence.useLayoutEffect"]);
            return ({
                "usePresence.useLayoutEffect": ()=>{
                    cancelled = true;
                }
            })["usePresence.useLayoutEffect"];
        }
    }["usePresence.useLayoutEffect"], [
        ref,
        isExiting,
        prefix,
        handleAnimationEnd
    ]);
    return {
        /**
     * Indicates whether the ref object is supposed to be mounted
     */ isPresent: isOpen || exitState !== 'finished',
        /**
     * Indicates whether the ref object is currently exiting
     */ isExiting
    };
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/usePresenceContext.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "usePresenceContext",
    ()=>usePresenceContext
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePresence$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/usePresence.js [app-client] (ecmascript)");
;
;
/**
 * Returns if the presence node is present and the context value to be used by a presence context, e.g. ModalPresence.
 */ const usePresenceContext = (open, initialPresenceId)=>{
    const presenceIdRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(initialPresenceId);
    const presenceRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const prevPresenceRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    // clean up the presence id, if not predefined and if the presence node was unmounted
    if (!initialPresenceId && prevPresenceRef.current && !presenceRef.current) {
        presenceIdRef.current = null;
    }
    prevPresenceRef.current = presenceRef.current;
    const { isPresent, isExiting } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePresence$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePresence"])(presenceRef, open);
    const isPresenceExclusive = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "usePresenceContext.useCallback[isPresenceExclusive]": (id)=>{
            if (!id) return false;
            // return false if the presence context is occupied
            if (presenceIdRef.current && presenceIdRef.current !== id) return false;
            // otherwise occupy presence context and return true
            presenceIdRef.current = id;
            return true;
        }
    }["usePresenceContext.useCallback[isPresenceExclusive]"], []);
    const contextValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "usePresenceContext.useMemo[contextValue]": ()=>({
                presenceRef,
                isPresenceExclusive,
                isExiting
            })
    }["usePresenceContext.useMemo[contextValue]"], [
        presenceRef,
        isPresenceExclusive,
        isExiting
    ]);
    return [
        isPresent,
        contextValue
    ];
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/OptimizedResize.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "OptimizedResize",
    ()=>OptimizedResize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/window-or-global/lib/index.js [app-client] (ecmascript)");
;
// mdn resize function
/**
 * A callback function to be executed on `resize`.
 */ const OptimizedResize = (()=>{
    const callbacks = [];
    let running = false;
    const runCallbacks = ()=>{
        callbacks.forEach((callback)=>{
            callback();
        });
        running = false;
    };
    const handleResize = ()=>{
        if (!running) {
            running = true;
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].requestAnimationFrame(runCallbacks);
        }
    };
    const addCallback = (callback)=>{
        const index = callbacks.indexOf(callback);
        if (index < 0) {
            callbacks.push(callback);
        }
    };
    return {
        /** Adds a callback function to be executed on window `resize`. */ add: (callback)=>{
            if (!callbacks.length) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].addEventListener('resize', handleResize);
            }
            addCallback(callback);
            return {
                /** Removes the callback. */ remove: ()=>{
                    const index = callbacks.indexOf(callback);
                    if (index >= 0) {
                        callbacks.splice(index, 1);
                    }
                }
            };
        }
    };
})();
;
}),
"[project]/node_modules/@carbon/react/es/internal/FloatingMenu.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "DIRECTION_BOTTOM",
    ()=>DIRECTION_BOTTOM,
    "DIRECTION_LEFT",
    ()=>DIRECTION_LEFT,
    "DIRECTION_RIGHT",
    ()=>DIRECTION_RIGHT,
    "DIRECTION_TOP",
    ()=>DIRECTION_TOP,
    "FloatingMenu",
    ()=>FloatingMenu
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$feature$2d$flags$2f$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/feature-flags/es/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/window-or-global/lib/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$keys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/keys.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$match$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/match.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/keyboard/navigation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$OptimizedResize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/OptimizedResize.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/usePrefix.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$warning$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/warning.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$wrapFocus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/wrapFocus.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const DIRECTION_LEFT = 'left';
const DIRECTION_TOP = 'top';
const DIRECTION_RIGHT = 'right';
const DIRECTION_BOTTOM = 'bottom';
/**
 * Computes the floating menu's position based on the menu size, trigger element
 * position, offset, direction, and container.
 */ const getFloatingPosition = ({ menuSize, refPosition, offset, direction, scrollX, scrollY, container })=>{
    const { left: refLeft = 0, top: refTop = 0, right: refRight = 0, bottom: refBottom = 0 } = refPosition;
    const effectiveScrollX = container.position !== 'static' ? 0 : scrollX;
    const effectiveScrollY = container.position !== 'static' ? 0 : scrollY;
    const relativeDiff = {
        top: container.position !== 'static' ? container.rect.top : 0,
        left: container.position !== 'static' ? container.rect.left : 0
    };
    const { width, height } = menuSize;
    const { top = 0, left = 0 } = offset;
    const refCenterHorizontal = (refLeft + refRight) / 2;
    const refCenterVertical = (refTop + refBottom) / 2;
    const positions = {
        [DIRECTION_LEFT]: ()=>({
                left: refLeft - width + effectiveScrollX - left - relativeDiff.left,
                top: refCenterVertical - height / 2 + effectiveScrollY + top - 9 - relativeDiff.top
            }),
        [DIRECTION_TOP]: ()=>({
                left: refCenterHorizontal - width / 2 + effectiveScrollX + left - relativeDiff.left,
                top: refTop - height + effectiveScrollY - top - relativeDiff.top
            }),
        [DIRECTION_RIGHT]: ()=>({
                left: refRight + effectiveScrollX + left - relativeDiff.left,
                top: refCenterVertical - height / 2 + effectiveScrollY + top + 3 - relativeDiff.top
            }),
        [DIRECTION_BOTTOM]: ()=>({
                left: refCenterHorizontal - width / 2 + effectiveScrollX + left - relativeDiff.left,
                top: refBottom + effectiveScrollY + top - relativeDiff.top
            })
    };
    return positions[direction]();
};
const FloatingMenu = ({ children, flipped, focusTrap, menuDirection = DIRECTION_BOTTOM, menuOffset = {
    top: 0,
    left: 0
}, menuRef: externalMenuRef, onPlace, selectorPrimaryFocus, styles, target = ()=>document.body, triggerRef, updateOrientation })=>{
    const prefix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PrefixContext"]);
    const [floatingPosition, setFloatingPosition] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(undefined);
    const menuBodyRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const startSentinelRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const endSentinelRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const placeInProgressRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false);
    const updateMenuPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FloatingMenu.useCallback[updateMenuPosition]": (isAdjustment)=>{
            const menuBody = menuBodyRef.current;
            if (!menuBody) {
                ("TURBOPACK compile-time truthy", 1) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$warning$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warning"])(!!menuBody, 'The DOM node for menu body for calculating its position is not available. Skipping...') : "TURBOPACK unreachable";
                return;
            }
            const triggerEl = triggerRef.current;
            const menuSize = menuBody.getBoundingClientRect();
            const refPosition = triggerEl ? triggerEl.getBoundingClientRect() : undefined;
            const offsetValue = typeof menuOffset === 'function' ? menuOffset(menuBody, menuDirection, triggerEl, flipped) : menuOffset;
            if (updateOrientation) {
                updateOrientation({
                    menuSize,
                    refPosition,
                    direction: menuDirection,
                    offset: offsetValue,
                    scrollX: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].pageXOffset,
                    scrollY: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].pageYOffset,
                    container: {
                        rect: target().getBoundingClientRect(),
                        position: getComputedStyle(target()).position
                    }
                });
            }
            // Only set position if the menu has a valid size or if no offset is provided.
            if (menuSize.width > 0 && menuSize.height > 0 || !offsetValue) {
                const newFloatingPosition = getFloatingPosition({
                    menuSize,
                    refPosition: refPosition ?? {
                        left: 0,
                        top: 0,
                        right: 0,
                        bottom: 0
                    },
                    offset: offsetValue,
                    direction: menuDirection,
                    scrollX: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].pageXOffset,
                    scrollY: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$window$2d$or$2d$global$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].pageYOffset,
                    container: {
                        rect: target().getBoundingClientRect(),
                        position: getComputedStyle(target()).position
                    }
                });
                // Only update if the position has actually changed.
                if (!floatingPosition || floatingPosition.left !== newFloatingPosition.left || floatingPosition.top !== newFloatingPosition.top) {
                    setFloatingPosition(newFloatingPosition);
                }
                // Re-check after setting the position if not already adjusting.
                if (!isAdjustment) {
                    const newMenuSize = menuBody.getBoundingClientRect();
                    // TODO: Was there a bug in the old code? How could one `DOMRect` be
                    // compared to another using `!==`?
                    if (newMenuSize.width !== menuSize.width || newMenuSize.height !== menuSize.height) {
                        updateMenuPosition(true);
                    }
                }
            }
        }
    }["FloatingMenu.useCallback[updateMenuPosition]"], [
        triggerRef,
        menuOffset,
        menuDirection,
        flipped,
        target,
        updateOrientation,
        floatingPosition
    ]);
    const focusMenuContent = (menuBody)=>{
        const primaryFocusNode = selectorPrimaryFocus ? menuBody.querySelector(selectorPrimaryFocus) : null;
        const tabbableNode = menuBody.querySelector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["selectorTabbable"]);
        const focusableNode = menuBody.querySelector(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$navigation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["selectorFocusable"]);
        const focusTarget = primaryFocusNode || // User defined focusable node
        tabbableNode || // First sequentially focusable node
        focusableNode || // First programmatic focusable node
        menuBody;
        focusTarget.focus();
        if (focusTarget === menuBody) {
            ("TURBOPACK compile-time truthy", 1) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$warning$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["warning"])(focusableNode === null, 'Floating Menus must have at least a programmatically focusable child. This can be accomplished by adding tabIndex="-1" to the content element.') : "TURBOPACK unreachable";
        }
    };
    const handleMenuRef = (node)=>{
        menuBodyRef.current = node;
        placeInProgressRef.current = !!node;
        if (externalMenuRef) {
            externalMenuRef(node);
        }
        if (node) {
            updateMenuPosition();
        }
    };
    // When the menu has been placed, focus the content and call onPlace.
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "FloatingMenu.useEffect": ()=>{
            if (placeInProgressRef.current && floatingPosition && menuBodyRef.current) {
                if (!menuBodyRef.current.contains(document.activeElement)) {
                    focusMenuContent(menuBodyRef.current);
                }
                if (typeof onPlace === 'function') {
                    onPlace(menuBodyRef.current);
                }
                placeInProgressRef.current = false;
            }
        // eslint-disable-next-line  react-hooks/exhaustive-deps -- https://github.com/carbon-design-system/carbon/issues/20452
        }
    }["FloatingMenu.useEffect"], [
        floatingPosition,
        onPlace
    ]);
    // Attach a resize listener.
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "FloatingMenu.useEffect": ()=>{
            const resizeHandler = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$OptimizedResize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptimizedResize"].add({
                "FloatingMenu.useEffect.resizeHandler": ()=>{
                    updateMenuPosition();
                }
            }["FloatingMenu.useEffect.resizeHandler"]);
            return ({
                "FloatingMenu.useEffect": ()=>{
                    resizeHandler.remove();
                }
            })["FloatingMenu.useEffect"];
        // eslint-disable-next-line  react-hooks/exhaustive-deps -- https://github.com/carbon-design-system/carbon/issues/20452
        }
    }["FloatingMenu.useEffect"], [
        triggerRef,
        menuOffset,
        menuDirection,
        flipped,
        target,
        updateOrientation
    ]);
    // Update menu position when key props change.
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "FloatingMenu.useEffect": ()=>{
            updateMenuPosition();
        // eslint-disable-next-line  react-hooks/exhaustive-deps -- https://github.com/carbon-design-system/carbon/issues/20452
        }
    }["FloatingMenu.useEffect"], [
        menuOffset,
        menuDirection,
        flipped,
        triggerRef,
        target,
        updateOrientation
    ]);
    /**
   * Clones the child element to add a `ref` and positioning styles.
   */ const getChildrenWithProps = ()=>{
        const pos = floatingPosition;
        const positioningStyle = pos ? {
            left: `${pos.left}px`,
            top: `${pos.top}px`,
            right: 'auto'
        } : {
            visibility: 'hidden',
            top: '0px'
        };
        const child = children;
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cloneElement"])(child, {
            ref: handleMenuRef,
            style: {
                ...styles,
                ...positioningStyle,
                position: 'absolute',
                opacity: 1
            }
        });
    };
    /**
   * Blur handler used when focus trapping is enabled.
   */ const handleBlur = (event)=>{
        const { target, relatedTarget } = event;
        if (menuBodyRef.current && startSentinelRef.current && endSentinelRef.current && target instanceof HTMLElement && relatedTarget instanceof HTMLElement) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$wrapFocus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapFocus"])({
                bodyNode: menuBodyRef.current,
                startTrapNode: startSentinelRef.current,
                endTrapNode: endSentinelRef.current,
                currentActiveNode: relatedTarget,
                oldActiveNode: target
            });
        }
    };
    /**
   * Keydown handler for focus wrapping when experimental focus trap is enabled.
   */ const handleKeyDown = (event)=>{
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$match$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["match"])(event, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$keyboard$2f$keys$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Tab"]) && menuBodyRef.current && event.target instanceof HTMLElement) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$wrapFocus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapFocusWithoutSentinels"])({
                containerNode: menuBodyRef.current,
                currentActiveNode: event.target,
                event
            });
        }
    };
    const deprecatedFlag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$feature$2d$flags$2f$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["enabled"]('enable-experimental-focus-wrap-without-sentinels');
    const focusTrapWithoutSentinelsFlag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$feature$2d$flags$2f$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["enabled"]('enable-focus-wrap-without-sentinels');
    const focusTrapWithoutSentinels = deprecatedFlag || focusTrapWithoutSentinelsFlag;
    if (typeof document !== 'undefined') {
        const portalTarget = target ? target() : document.body;
        return /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createPortal(/*#__PURE__*/ // eslint-disable-next-line  jsx-a11y/no-static-element-interactions  -- https://github.com/carbon-design-system/carbon/issues/20452
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            onBlur: focusTrap && !focusTrapWithoutSentinels ? handleBlur : undefined,
            onKeyDown: focusTrapWithoutSentinels ? handleKeyDown : undefined
        }, !focusTrapWithoutSentinels && /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
            ref: startSentinelRef,
            tabIndex: 0,
            role: "link",
            className: `${prefix}--visually-hidden`
        }, "Focus sentinel"), getChildrenWithProps(), !focusTrapWithoutSentinels && /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("span", {
            ref: endSentinelRef,
            tabIndex: 0,
            role: "link",
            className: `${prefix}--visually-hidden`
        }, "Focus sentinel")), portalTarget);
    }
    return null;
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/useOutsideClick.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "useOutsideClick",
    ()=>useOutsideClick
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$environment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/environment.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$useEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/useEvent.js [app-client] (ecmascript)");
;
;
;
const useOutsideClick = (ref, callback)=>{
    const savedCallback = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(callback);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useOutsideClick.useEffect": ()=>{
            savedCallback.current = callback;
        }
    }["useOutsideClick.useEffect"], [
        callback
    ]);
    // We conditionally guard the `useEvent` hook for SSR. `canUseDOM` can be
    // treated as a constant as it will be false when executed in a Node.js
    // environment and true when executed in the browser
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$environment$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["canUseDOM"]) {
        // TODO: https://github.com/carbon-design-system/carbon/issues/19005
        /*
    // eslint-disable-next-line react-hooks/rules-of-hooks
    */ // eslint-disable-next-line  react-hooks/rules-of-hooks -- https://github.com/carbon-design-system/carbon/issues/20452
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$useEvent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useWindowEvent"])('click', {
            "useOutsideClick.useWindowEvent": (event)=>{
                const { target } = event;
                if (target instanceof Node && ref.current && !ref.current.contains(target)) {
                    savedCallback.current(event);
                }
            }
        }["useOutsideClick.useWindowEvent"]);
    }
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/useSavedCallback.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "useSavedCallback",
    ()=>useSavedCallback
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
/**
 * Returns a stable callback reference that always points to the latest version
 * of a callback. This is useful when you want to avoid including the callback
 * in dependency arrays while still ensuring the latest callback implementation
 * is used.
 *
 * @param callback - The callback to track.
 */ // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
const useSavedCallback = (callback)=>{
    const savedCallback = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(callback);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useSavedCallback.useEffect": ()=>{
            savedCallback.current = callback;
        }
    }["useSavedCallback.useEffect"], [
        callback
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useSavedCallback.useCallback": (...args)=>savedCallback.current ? savedCallback.current(...args) : undefined
    }["useSavedCallback.useCallback"], []);
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/Selection.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "useSelection",
    ()=>useSelection
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-fast-compare/index.js [app-client] (ecmascript)");
;
;
const callOnChangeHandler = ({ isControlled, isMounted, onChangeHandlerControlled, onChangeHandlerUncontrolled, selectedItems })=>{
    if (isControlled) {
        if (isMounted && onChangeHandlerControlled) {
            // Use setTimeout to defer the controlled onChange call,
            // avoiding React’s warning: "Cannot update a component while rendering a different component".
            // This ensures the parent state updates after rendering completes.
            setTimeout(()=>{
                onChangeHandlerControlled({
                    selectedItems
                });
            }, 0);
        }
    } else {
        onChangeHandlerUncontrolled(selectedItems);
    }
};
const useSelection = ({ disabled, onChange, initialSelectedItems = [], selectedItems: controlledItems, selectAll = false, filteredItems = [] })=>{
    const isMounted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false);
    const savedOnChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(onChange);
    const [uncontrolledItems, setUncontrolledItems] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(initialSelectedItems);
    const isControlled = !!controlledItems;
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- https://github.com/carbon-design-system/carbon/issues/20452
    const selectedItems = isControlled ? controlledItems : uncontrolledItems;
    const onItemChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useSelection.useCallback[onItemChange]": (item)=>{
            if (disabled) return;
            // Assert special properties (e.g., `disabled`, `isSelectAll`, etc.) are
            // `any` since those properties aren’t part of the generic type.
            const allSelectableItems = filteredItems.filter({
                "useSelection.useCallback[onItemChange].allSelectableItems": // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
                (item)=>!item?.disabled && !item?.isSelectAll
            }["useSelection.useCallback[onItemChange].allSelectableItems"]);
            const disabledItemCount = filteredItems.filter({
                "useSelection.useCallback[onItemChange]": // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
                (item)=>item?.disabled
            }["useSelection.useCallback[onItemChange]"]).length;
            let newSelectedItems;
            // deselect all on click to All/indeterminate option
            // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
            if (item?.isSelectAll && selectedItems.length > 0) {
                newSelectedItems = [];
            } else if (item?.isSelectAll && selectedItems.length === 0) {
                newSelectedItems = allSelectableItems;
            } else {
                const selectedIndex = selectedItems.findLastIndex({
                    "useSelection.useCallback[onItemChange].selectedIndex": (selectedItem)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$fast$2d$compare$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(selectedItem, item)
                }["useSelection.useCallback[onItemChange].selectedIndex"]);
                if (selectedIndex === -1) {
                    newSelectedItems = selectedItems.concat(item);
                    // checking if all items are selected then We should select mark the 'select All' option as well
                    if (selectAll && filteredItems.length - 1 === newSelectedItems.length + disabledItemCount) {
                        newSelectedItems = allSelectableItems;
                    }
                } else {
                    newSelectedItems = removeAtIndex(selectedItems, selectedIndex);
                    newSelectedItems = newSelectedItems.filter({
                        "useSelection.useCallback[onItemChange]": // eslint-disable-next-line @typescript-eslint/no-explicit-any -- https://github.com/carbon-design-system/carbon/issues/20452
                        (item)=>!item?.isSelectAll
                    }["useSelection.useCallback[onItemChange]"]);
                }
            }
            callOnChangeHandler({
                isControlled,
                isMounted: isMounted.current,
                onChangeHandlerControlled: savedOnChange.current,
                onChangeHandlerUncontrolled: setUncontrolledItems,
                selectedItems: newSelectedItems
            });
        }
    }["useSelection.useCallback[onItemChange]"], [
        disabled,
        selectedItems,
        filteredItems,
        selectAll,
        isControlled
    ]);
    const clearSelection = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useSelection.useCallback[clearSelection]": ()=>{
            if (disabled) return;
            callOnChangeHandler({
                isControlled,
                isMounted: isMounted.current,
                onChangeHandlerControlled: savedOnChange.current,
                onChangeHandlerUncontrolled: setUncontrolledItems,
                selectedItems: []
            });
        }
    }["useSelection.useCallback[clearSelection]"], [
        disabled,
        isControlled
    ]);
    const toggleAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useSelection.useCallback[toggleAll]": (items)=>{
            callOnChangeHandler({
                isControlled,
                isMounted: isMounted.current,
                onChangeHandlerControlled: savedOnChange.current,
                onChangeHandlerUncontrolled: setUncontrolledItems,
                selectedItems: items
            });
        }
    }["useSelection.useCallback[toggleAll]"], [
        isControlled
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useSelection.useEffect": ()=>{
            savedOnChange.current = onChange;
        }
    }["useSelection.useEffect"], [
        onChange
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useSelection.useEffect": ()=>{
            if (isMounted.current && savedOnChange.current && !isControlled) {
                savedOnChange.current({
                    selectedItems
                });
            }
        }
    }["useSelection.useEffect"], [
        isControlled,
        selectedItems
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useSelection.useEffect": ()=>{
            isMounted.current = true;
            return ({
                "useSelection.useEffect": ()=>{
                    isMounted.current = false;
                }
            })["useSelection.useEffect"];
        }
    }["useSelection.useEffect"], []);
    return {
        clearSelection,
        onItemChange,
        toggleAll,
        selectedItems
    };
};
/**
 * Generic utility for safely removing an element at a given index from an
 * array.
 */ const removeAtIndex = (array, index)=>{
    const result = array.slice();
    result.splice(index, 1);
    return result;
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/useNormalizedInputProps.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s([
    "useNormalizedInputProps",
    ()=>useNormalizedInputProps
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$icons$2d$react$2f$es$2f$generated$2f$bucket$2d$19$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/icons-react/es/generated/bucket-19.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$components$2f$Text$2f$Text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/components/Text/Text.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@carbon/react/es/internal/usePrefix.js [app-client] (ecmascript)");
;
;
;
;
;
/**
 * Returns an object containing normalized properties for an input component.
 *
 * This hook ensures that only one of `invalid` or `warn` is active (with
 * `invalid` taking precedence) and that `readOnly` overrides the `disabled`,
 * `invalid`, and `warn` states. It generates unique IDs for error, warning, and
 * helper messages, and conditionally provides the appropriate validation
 * message and accompanying icon.
 */ const useNormalizedInputProps = ({ id, readOnly, disabled, invalid, invalidText, warn, warnText })=>{
    const prefix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$internal$2f$usePrefix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePrefix"])();
    const normalizedProps = {
        disabled: !readOnly && disabled,
        invalid: !readOnly && invalid,
        invalidId: `${id}-error-msg`,
        warn: !readOnly && !invalid && warn,
        warnId: `${id}-warn-msg`,
        validation: null,
        icon: null,
        helperId: `${id}-helper-text`
    };
    if (normalizedProps.invalid) {
        normalizedProps.icon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$icons$2d$react$2f$es$2f$generated$2f$bucket$2d$19$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WarningFilled"];
        normalizedProps.validation = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$components$2f$Text$2f$Text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Text"], {
            as: "div",
            className: `${prefix}--form-requirement`,
            id: normalizedProps.invalidId
        }, invalidText);
    } else if (normalizedProps.warn) {
        normalizedProps.icon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$icons$2d$react$2f$es$2f$generated$2f$bucket$2d$19$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WarningAltFilled"];
        normalizedProps.validation = /*#__PURE__*/ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$carbon$2f$react$2f$es$2f$components$2f$Text$2f$Text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Text"], {
            as: "div",
            className: `${prefix}--form-requirement`,
            id: normalizedProps.warnId
        }, warnText);
    }
    return normalizedProps;
};
;
}),
"[project]/node_modules/@carbon/react/es/internal/getAnnouncement.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */ /** Returns an announcement message when the remaining count is low. */ __turbopack_context__.s([
    "getAnnouncement",
    ()=>getAnnouncement
]);
const getAnnouncement = (count, maxCount, singularEntityName = 'character', pluralEntityName = 'characters')=>{
    if (typeof maxCount === 'undefined') return null;
    const remaining = maxCount - count;
    if (remaining <= 10 && remaining > 0) {
        const entityName = remaining === 1 ? singularEntityName : pluralEntityName;
        return `${remaining} ${entityName} left.`;
    }
    if (remaining <= 0) {
        return `Maximum ${pluralEntityName} reached.`;
    }
    return null;
};
;
}),
]);

//# sourceMappingURL=node_modules_%40carbon_react_es_e9f360f5._.js.map